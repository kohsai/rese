<?php
// このコードは、Like というモデルクラスを定義しています。このクラスは、いいねやお気に入りに関連するデータを管理するためのモデルです。このモデルが対応するテーブルは、通常 likes テーブルになると思われます。Like モデルは、どのユーザーがどのショップに「いいね」または「お気に入り」を付けたかという情報を保存します。
namespace App\Models;

// HasFactory:
// このトレイトを使うことで、Laravelのモデルファクトリー機能を利用できるようになります。ファクトリーは、テストデータの生成やデータベースのシーディング（初期データの挿入）を簡単に行うための仕組みです。
// Model:
// Model クラスは、Eloquent ORMを使用してデータベース操作を簡単に行えるようにするLaravelの基底クラスです。この Like クラスも Model を継承しているので、データベースの操作が簡単に行えます。
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;


// class Like extends Model:
// Like クラスは Model クラスを継承しています。これにより、このクラスは likes テーブルに対応し、Eloquent ORMの機能を活用してデータベース操作が行えるようになります。
class Like extends Model
{
    use HasFactory;

// $fillable:
// このプロパティは、Eloquent モデルに対して一括代入を許可する属性（カラム）を定義します。
// 以下のように、user_id と shop_id を一括で保存することができるようになります。$fillable プロパティを設定することで、Laravelが自動的に一括代入を行う際に、これらのカラムのみを対象にして安全に処理されます。
// これにより、user_id と shop_id のみが一括代入可能となり、それ以外のカラムには不正なデータが挿入されることを防げます。
    protected $fillable = [
        'user_id',
        'shop_id',
    ];
}

// このモデルが表すもの
// Like モデルは、ユーザーが特定のショップに「いいね」や「お気に入り」をつけるというデータを管理しています。
// 例えば、1人のユーザーが複数のショップに「いいね」をつけることができ、逆に1つのショップには多くのユーザーが「いいね」をつけることができます。
// そのため、user_id と shop_id の2つのカラムが必要です。この2つの情報を基に、どのユーザーがどのショップに「いいね」をしたのかが分かります。

// まとめ
// この Like モデルは、ユーザーとショップとの間で「いいね」や「お気に入り」の関係を管理するためのものです。主に以下の機能を提供しています：

// $fillable: user_id と shop_id のみを一括代入可能にしています。
// Eloquent ORMを活用: データベース操作（作成、取得、削除など）が簡単に行えるようになります。
// このモデルを使うことで、ユーザーが特定のショップに対して「いいね」を付けたり外したりする操作が簡単に実装できます。